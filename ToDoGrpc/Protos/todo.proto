syntax = "proto3";

option csharp_namespace = "ToDoGrpc";

import "google/api/annotations.proto";

package todoit;

service ToDoIt {
// Create
rpc CreateToDo (CreateToDoRequest) returns (CreateToDoResponse) {
    option (google.api.http) = {
        post: "/v1/todo",
        body: "*"
    };
}

// Read single
rpc ReadToDo (ReadToDoRequest) returns (ReadToDoResponse) {
    option (google.api.http) = {
        get: "/v1/todo/{id}"
    };
}

// Read list
rpc ListToDo (GetAllRequest) returns (GetAllResponse) {
    option (google.api.http) = {
        get: "/v1/todo"
    };
}

// Update
rpc UpdateToDo (UpdateToDoRequest) returns (UpdateToDoResponse) {
    option (google.api.http) = {
        put: "/v1/todo",
        body: "*"

    };
}

// Delete
rpc DeleteToDo (DeleteToDoRequest) returns (DeleteToDoResponse) {
    option (google.api.http) = {
        delete: "/v1/todo/{id}"
    };
}
}

enum RouteTravelMode {
  // No travel mode specified. Defaults to `DRIVE`.
  TRAVEL_MODE_UNSPECIFIED = 0;

  // Travel by passenger car.
  DRIVE = 1;

  // Travel by bicycle.
  BICYCLE = 2;

  // Travel by walking.
  WALK = 3;

  // Two-wheeled, motorized vehicle. For example, motorcycle. Note that this
  // differs from the `BICYCLE` travel mode which covers human-powered mode.
  TWO_WHEELER = 4;

  TRUCK = 6;

  // Travel by public transit routes, where available.
  TRANSIT = 7;
}

message CreateToDoRequest {
    string title = 1;
    string description = 2;
    RouteTravelMode travel_mode = 3;
}

message CreateToDoResponse {
    int32 id = 1;
}

message ReadToDoRequest {
    int32 id = 1;
}

message ReadToDoResponse {
    int32 id = 1;
    string title = 2;
    string description = 3;
    string to_do_status = 4;
    RouteTravelMode travel_mode = 5;
}

message GetAllRequest {}

message GetAllResponse {
    repeated ReadToDoResponse to_do =1;
}

message UpdateToDoRequest {
    int32 id = 1;
    string title = 2;
    string description = 3;
    string to_do_status = 4;
    RouteTravelMode travel_mode = 5;
}

message UpdateToDoResponse {
    int32 id = 1;
}

message DeleteToDoRequest {
    int32 id = 1;
}

message DeleteToDoResponse {
    int32 id = 1;
}

